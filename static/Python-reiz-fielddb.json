{
    "Module": {
        "body": [
            "stmt",
            "SEQUENCE"
        ],
        "type_ignores": [
            "type_ignore",
            "SEQUENCE"
        ],
        "filename": [
            "string",
            "REQUIRED"
        ],
        "project": [
            "project",
            "REQUIRED"
        ]
    },
    "lineno": [
        "int",
        "REQUIRED"
    ],
    "col_offset": [
        "int",
        "REQUIRED"
    ],
    "end_lineno": [
        "int",
        null
    ],
    "end_col_offset": [
        "int",
        null
    ],
    "_tag": [
        "int",
        null
    ],
    "_parent_types": [
        "__parent_info",
        "SEQUENCE"
    ],
    "_module": [
        "Module",
        null
    ],
    "FunctionDef": {
        "name": [
            "identifier",
            "REQUIRED"
        ],
        "args": [
            "arguments",
            "REQUIRED"
        ],
        "body": [
            "stmt",
            "SEQUENCE"
        ],
        "decorator_list": [
            "expr",
            "SEQUENCE"
        ],
        "returns": [
            "expr",
            null
        ],
        "type_comment": [
            "string",
            null
        ]
    },
    "AsyncFunctionDef": {
        "name": [
            "identifier",
            "REQUIRED"
        ],
        "args": [
            "arguments",
            "REQUIRED"
        ],
        "body": [
            "stmt",
            "SEQUENCE"
        ],
        "decorator_list": [
            "expr",
            "SEQUENCE"
        ],
        "returns": [
            "expr",
            null
        ],
        "type_comment": [
            "string",
            null
        ]
    },
    "ClassDef": {
        "name": [
            "identifier",
            "REQUIRED"
        ],
        "bases": [
            "expr",
            "SEQUENCE"
        ],
        "keywords": [
            "keyword",
            "SEQUENCE"
        ],
        "body": [
            "stmt",
            "SEQUENCE"
        ],
        "decorator_list": [
            "expr",
            "SEQUENCE"
        ]
    },
    "Return": {
        "value": [
            "expr",
            null
        ]
    },
    "Delete": {
        "targets": [
            "expr",
            "SEQUENCE"
        ]
    },
    "Assign": {
        "targets": [
            "expr",
            "SEQUENCE"
        ],
        "value": [
            "expr",
            "REQUIRED"
        ],
        "type_comment": [
            "string",
            null
        ]
    },
    "AugAssign": {
        "target": [
            "expr",
            "REQUIRED"
        ],
        "op": [
            "operator",
            "REQUIRED"
        ],
        "value": [
            "expr",
            "REQUIRED"
        ]
    },
    "AnnAssign": {
        "target": [
            "expr",
            "REQUIRED"
        ],
        "annotation": [
            "expr",
            "REQUIRED"
        ],
        "value": [
            "expr",
            null
        ],
        "simple": [
            "int",
            "REQUIRED"
        ]
    },
    "For": {
        "target": [
            "expr",
            "REQUIRED"
        ],
        "iter": [
            "expr",
            "REQUIRED"
        ],
        "body": [
            "stmt",
            "SEQUENCE"
        ],
        "orelse": [
            "stmt",
            "SEQUENCE"
        ],
        "type_comment": [
            "string",
            null
        ]
    },
    "AsyncFor": {
        "target": [
            "expr",
            "REQUIRED"
        ],
        "iter": [
            "expr",
            "REQUIRED"
        ],
        "body": [
            "stmt",
            "SEQUENCE"
        ],
        "orelse": [
            "stmt",
            "SEQUENCE"
        ],
        "type_comment": [
            "string",
            null
        ]
    },
    "While": {
        "test": [
            "expr",
            "REQUIRED"
        ],
        "body": [
            "stmt",
            "SEQUENCE"
        ],
        "orelse": [
            "stmt",
            "SEQUENCE"
        ]
    },
    "If": {
        "test": [
            "expr",
            "REQUIRED"
        ],
        "body": [
            "stmt",
            "SEQUENCE"
        ],
        "orelse": [
            "stmt",
            "SEQUENCE"
        ]
    },
    "With": {
        "items": [
            "withitem",
            "SEQUENCE"
        ],
        "body": [
            "stmt",
            "SEQUENCE"
        ],
        "type_comment": [
            "string",
            null
        ]
    },
    "AsyncWith": {
        "items": [
            "withitem",
            "SEQUENCE"
        ],
        "body": [
            "stmt",
            "SEQUENCE"
        ],
        "type_comment": [
            "string",
            null
        ]
    },
    "Raise": {
        "exc": [
            "expr",
            null
        ],
        "cause": [
            "expr",
            null
        ]
    },
    "Try": {
        "body": [
            "stmt",
            "SEQUENCE"
        ],
        "handlers": [
            "excepthandler",
            "SEQUENCE"
        ],
        "orelse": [
            "stmt",
            "SEQUENCE"
        ],
        "finalbody": [
            "stmt",
            "SEQUENCE"
        ]
    },
    "Assert": {
        "test": [
            "expr",
            "REQUIRED"
        ],
        "msg": [
            "expr",
            null
        ]
    },
    "Import": {
        "names": [
            "alias",
            "SEQUENCE"
        ]
    },
    "ImportFrom": {
        "module": [
            "identifier",
            null
        ],
        "names": [
            "alias",
            "SEQUENCE"
        ],
        "level": [
            "int",
            null
        ]
    },
    "Global": {
        "names": [
            "identifier",
            "SEQUENCE"
        ]
    },
    "Nonlocal": {
        "names": [
            "identifier",
            "SEQUENCE"
        ]
    },
    "Expr": {
        "value": [
            "expr",
            "REQUIRED"
        ]
    },
    "Pass": {},
    "Break": {},
    "Continue": {},
    "BoolOp": {
        "op": [
            "boolop",
            "REQUIRED"
        ],
        "values": [
            "expr",
            "SEQUENCE"
        ]
    },
    "NamedExpr": {
        "target": [
            "expr",
            "REQUIRED"
        ],
        "value": [
            "expr",
            "REQUIRED"
        ]
    },
    "BinOp": {
        "left": [
            "expr",
            "REQUIRED"
        ],
        "op": [
            "operator",
            "REQUIRED"
        ],
        "right": [
            "expr",
            "REQUIRED"
        ]
    },
    "UnaryOp": {
        "op": [
            "unaryop",
            "REQUIRED"
        ],
        "operand": [
            "expr",
            "REQUIRED"
        ]
    },
    "Lambda": {
        "args": [
            "arguments",
            "REQUIRED"
        ],
        "body": [
            "expr",
            "REQUIRED"
        ]
    },
    "IfExp": {
        "test": [
            "expr",
            "REQUIRED"
        ],
        "body": [
            "expr",
            "REQUIRED"
        ],
        "orelse": [
            "expr",
            "REQUIRED"
        ]
    },
    "Dict": {
        "keys": [
            "expr",
            "SEQUENCE"
        ],
        "values": [
            "expr",
            "SEQUENCE"
        ]
    },
    "Set": {
        "elts": [
            "expr",
            "SEQUENCE"
        ]
    },
    "ListComp": {
        "elt": [
            "expr",
            "REQUIRED"
        ],
        "generators": [
            "comprehension",
            "SEQUENCE"
        ]
    },
    "SetComp": {
        "elt": [
            "expr",
            "REQUIRED"
        ],
        "generators": [
            "comprehension",
            "SEQUENCE"
        ]
    },
    "DictComp": {
        "key": [
            "expr",
            "REQUIRED"
        ],
        "value": [
            "expr",
            "REQUIRED"
        ],
        "generators": [
            "comprehension",
            "SEQUENCE"
        ]
    },
    "GeneratorExp": {
        "elt": [
            "expr",
            "REQUIRED"
        ],
        "generators": [
            "comprehension",
            "SEQUENCE"
        ]
    },
    "Await": {
        "value": [
            "expr",
            "REQUIRED"
        ]
    },
    "Yield": {
        "value": [
            "expr",
            null
        ]
    },
    "YieldFrom": {
        "value": [
            "expr",
            "REQUIRED"
        ]
    },
    "Compare": {
        "left": [
            "expr",
            "REQUIRED"
        ],
        "ops": [
            "cmpop",
            "SEQUENCE"
        ],
        "comparators": [
            "expr",
            "SEQUENCE"
        ]
    },
    "Call": {
        "func": [
            "expr",
            "REQUIRED"
        ],
        "args": [
            "expr",
            "SEQUENCE"
        ],
        "keywords": [
            "keyword",
            "SEQUENCE"
        ]
    },
    "FormattedValue": {
        "value": [
            "expr",
            "REQUIRED"
        ],
        "conversion": [
            "int",
            null
        ],
        "format_spec": [
            "expr",
            null
        ]
    },
    "JoinedStr": {
        "values": [
            "expr",
            "SEQUENCE"
        ]
    },
    "Constant": {
        "value": [
            "string",
            "REQUIRED"
        ],
        "kind": [
            "string",
            null
        ]
    },
    "Attribute": {
        "value": [
            "expr",
            "REQUIRED"
        ],
        "attr": [
            "identifier",
            "REQUIRED"
        ],
        "ctx": [
            "expr_context",
            "REQUIRED"
        ]
    },
    "Subscript": {
        "value": [
            "expr",
            "REQUIRED"
        ],
        "slice": [
            "slice",
            "REQUIRED"
        ],
        "ctx": [
            "expr_context",
            "REQUIRED"
        ]
    },
    "Starred": {
        "value": [
            "expr",
            "REQUIRED"
        ],
        "ctx": [
            "expr_context",
            "REQUIRED"
        ]
    },
    "Name": {
        "id": [
            "identifier",
            "REQUIRED"
        ],
        "ctx": [
            "expr_context",
            "REQUIRED"
        ]
    },
    "List": {
        "elts": [
            "expr",
            "SEQUENCE"
        ],
        "ctx": [
            "expr_context",
            "REQUIRED"
        ]
    },
    "Tuple": {
        "elts": [
            "expr",
            "SEQUENCE"
        ],
        "ctx": [
            "expr_context",
            "REQUIRED"
        ]
    },
    "Sentinel": {},
    "sentinel": [
        "expr",
        "REQUIRED"
    ],
    "Slice": {
        "lower": [
            "expr",
            null
        ],
        "upper": [
            "expr",
            null
        ],
        "step": [
            "expr",
            null
        ]
    },
    "ExtSlice": {
        "dims": [
            "slice",
            "SEQUENCE"
        ]
    },
    "Index": {
        "value": [
            "expr",
            "REQUIRED"
        ]
    },
    "comprehension": {
        "target": [
            "expr",
            "REQUIRED"
        ],
        "iter": [
            "expr",
            "REQUIRED"
        ],
        "ifs": [
            "expr",
            "SEQUENCE"
        ],
        "is_async": [
            "int",
            "REQUIRED"
        ]
    },
    "ExceptHandler": {
        "type": [
            "expr",
            null
        ],
        "name": [
            "identifier",
            null
        ],
        "body": [
            "stmt",
            "SEQUENCE"
        ]
    },
    "arguments": {
        "posonlyargs": [
            "arg",
            "SEQUENCE"
        ],
        "args": [
            "arg",
            "SEQUENCE"
        ],
        "vararg": [
            "arg",
            null
        ],
        "kwonlyargs": [
            "arg",
            "SEQUENCE"
        ],
        "kw_defaults": [
            "expr",
            "SEQUENCE"
        ],
        "kwarg": [
            "arg",
            null
        ],
        "defaults": [
            "expr",
            "SEQUENCE"
        ]
    },
    "arg": {
        "arg": [
            "identifier",
            "REQUIRED"
        ],
        "annotation": [
            "expr",
            null
        ],
        "type_comment": [
            "string",
            null
        ],
        "lineno": [
            "int",
            "REQUIRED"
        ],
        "col_offset": [
            "int",
            "REQUIRED"
        ],
        "end_lineno": [
            "int",
            null
        ],
        "end_col_offset": [
            "int",
            null
        ],
        "_tag": [
            "int",
            null
        ],
        "_parent_types": [
            "__parent_info",
            "SEQUENCE"
        ],
        "_module": [
            "Module",
            null
        ]
    },
    "keyword": {
        "arg": [
            "identifier",
            null
        ],
        "value": [
            "expr",
            "REQUIRED"
        ]
    },
    "alias": {
        "name": [
            "identifier",
            "REQUIRED"
        ],
        "asname": [
            "identifier",
            null
        ]
    },
    "withitem": {
        "context_expr": [
            "expr",
            "REQUIRED"
        ],
        "optional_vars": [
            "expr",
            null
        ]
    },
    "TypeIgnore": {
        "lineno": [
            "int",
            "REQUIRED"
        ],
        "tag": [
            "string",
            "REQUIRED"
        ]
    },
    "And": {},
    "Or": {},
    "Invert": {},
    "Not": {},
    "UAdd": {},
    "USub": {},
    "Load": {},
    "Store": {},
    "Del": {},
    "AugLoad": {},
    "AugStore": {},
    "Param": {},
    "Eq": {},
    "NotEq": {},
    "Lt": {},
    "LtE": {},
    "Gt": {},
    "GtE": {},
    "Is": {},
    "IsNot": {},
    "In": {},
    "NotIn": {},
    "Add": {},
    "Sub": {},
    "Mult": {},
    "MatMult": {},
    "Div": {},
    "Mod": {},
    "Pow": {},
    "LShift": {},
    "RShift": {},
    "BitOr": {},
    "BitXor": {},
    "BitAnd": {},
    "FloorDiv": {},
    "project": {
        "name": [
            "string",
            "REQUIRED"
        ],
        "git_source": [
            "string",
            "REQUIRED"
        ],
        "git_revision": [
            "string",
            "REQUIRED"
        ]
    },
    "__parent_info": {
        "type_id": [
            "int",
            "REQUIRED"
        ],
        "field": [
            "string",
            "REQUIRED"
        ]
    }
}
