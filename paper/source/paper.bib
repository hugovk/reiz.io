@article{BAJRACHARYA2014241,
    abstract     = {A large amount of open source code is now available online, presenting a great potential resource for software developers. This has motivated software engineering researchers to develop tools and techniques to allow developers to reap the benefits of these billions of lines of source code. However, collecting and analyzing such a large quantity of source code presents a number of challenges. Although the current generation of open source code search engines provides access to the source code in an aggregated repository, they generally fail to take advantage of the rich structural information contained in the code they index. This makes them significantly less useful than Sourcerer for building state-of-the-art software engineering tools, as these tools often require access to both the structural and textual information available in source code. We have developed Sourcerer, an infrastructure for large-scale collection and analysis of open source code. By taking full advantage of the structural information extracted from source code in its repository, Sourcerer provides a foundation upon which state-of-the-art search engines and related tools can easily be built. We describe the Sourcerer infrastructure, present the applications that we have built on top of it, and discuss how existing tools could benefit from using Sourcerer.},
    author       = {Bajracharya, Sushil and Ossher, Joel and Lopes, Cristina},
    url          = {https://www.sciencedirect.com/science/article/pii/S016764231200072X},
    date         = {2014},
    doi          = {10.1016/j.scico.2012.04.008},
    issn         = {0167-6423},
    journaltitle = {Science of Computer Programming},
    keywords     = {Open source,Internet-scale code retrieval,Data mining,Sourcerer,Static analysis,Software information retrieval},
    note         = {Experimental Software and Toolkits (EST 4): A special issue of the Workshop on Academic Software Development Tools and Techniques (WASDeTT-3 2010)},
    pages        = {241--259},
    title        = {Sourcerer: An infrastructure for large-scale collection and analysis of open-source code},
    volume       = {79},
}

@misc{debiancodesearch,
    author       = {Stapelberg, Michael},
    publisher    = {Hochschule Mannheim Fakultät für Informatik},
    url          = {http://codesearch.debian.net/research/bsc-thesis.pdf},
    date         = {2012},
    journaltitle = {Bachelor-Thesis},
    title        = {Debian Code Search},
}

@inproceedings{asdl97,
    abstract  = {The Zephyr Abstract Syntax Description Language (ASDL) describes the abstract syntax of compiler intermediate representations (IRs) and other tree-like data structures. Just as the lexical and syntactic structures of programming languages are described with regular expressions and context free grammars, ASDL provides a concise notation for describing the abstract syntax of programming languages. Tools can convert ASDL descriptions into the appropriate data-structure definitions and functions to convert the data-structures to or from a standard flattened representation. This makes it easier to build compiler components that interoperate.Although ASDL lacks subtyping and inheritance, it is able to describe the Stanford University Intermediate Format (SUIF) compiler IR, originally implemented in C++. We have built a tool that converts ASDL into C, C++, Java, and ML data-structure definitions and conversion functions. We have also built a graphical browser-editor of ASDL data structures. ASDL shares features found in many network interface description languages (IDLs), algebraic data types, and languages such as ASN.1 and SGML. Compared to other alternatives ASDL is simple and powerful. This document describes ASDL in detail and presents an initial evaluation of ASDL.},
    author    = {Wang, Daniel C. and Appel, Andrew W. and Korn, Jeff L. and Serra, Christopher S.},
    location  = {Santa Barbara, California},
    publisher = {USENIX Association},
    booktitle = {Proceedings of the Conference on Domain-Specific Languages on Conference on Domain-Specific Languages (DSL), 1997},
    date      = {1997},
    pages     = {17},
    series    = {DSL'97},
    title     = {The Zephyr Abstract Syntax Description Language},
}

@article{hugovankemenade_richardsi_2021,
    author    = {van Kemenade, Hugo and Si, Richard},
    publisher = {Zenodo},
    date      = {2021-04},
    doi       = {10.5281/zenodo.4657163},
    title     = {hugovk/top-pypi-packages: Release 2021.04},
}

